# 2292번
"""
문제

육각형으로 이루어진 벌집이 있다.
그림에서 보는 바와 같이 중앙의 방 1부터 시작해서 이웃하는 방에 돌아가면서 1씩 증가하는 번호를 주소로 매길 수 있다.
숫자 N이 주어졌을 때, 벌집의 중앙 1에서 N번 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나가는지(시작과 끝을 포함하여)를 계산하는 프로그램을 작성하시오.
예를 들면, 13까지는 3개, 58까지는 5개를 지난다.

입력
첫째 줄에 N(1 ≤ N ≤ 1,000,000,000)이 주어진다.

출력
입력으로 주어진 방까지 최소 개수의 방을 지나서 갈 때 몇 개의 방을 지나는지 출력한다.

풀이방법
문제를 보면
임의의 수 x부터 13까지는 3 개의 방을 지나고, 임의의 숫자 y부터 58까지는 5개의 방을 지난다고 생각할 수 있다.
이는 곧 방의 수마다 해당하는 범위가 있다는 것이다.
따라서 입력하는 숫자가 특정 범위(해당 차수 내의 존재하는 모든 수)에 해당되면 범위에 해당되는 방의 숫자(차수 == 지나가는 방의 숫자)를 출력하면 된다.
1을 시작으로 둘러 쌓인 숫자 중 가장 큰 수를 나열하면 1, 7, 19, 37, 61 ... -> 차수가 늘어날 수록 6씩 증가하면서 수열을 이룸.
다시 말해, 2~7=2차수, 8~19=3차수, 20~37=4차수 ... 와 같은 식으로 범위가 설정된다.
"""

target = int(input())
start = 1  # 시작 숫자
count = 1  # 차수 == 지나가는 방의 숫자
dif = 6  # 공차?가 늘어나는 크기

if target == 1:  # 입력값 1일 때
    print(1)
else:
    while True:
        start += dif  # 다음 차수의 최대값
        count += 1  # 방 숫자 1 증가
        if target <= start:  # 입력값이 해당 차수의 범위 내에 존재하면
            print(count)  # 출력 후 탈출
            break
        dif += 6  # 범위를 벗어나면 공차에 6을 더해 새로운 공차 생성
